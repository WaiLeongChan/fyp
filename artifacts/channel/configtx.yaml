Organizations:
    - &OrdererOrg
        Name: OrdererOrg
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    - &Org1
        Name: Org1MSP
        ID: Org1MSP
        MSPDir: crypto-config/peerOrganizations/org1.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org1MSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"

        AnchorPeers:
            - Host: peer0.org1.example.com
              Port: 7051

    - &Org2
        Name: Org2MSP
        ID: Org2MSP
        MSPDir: crypto-config/peerOrganizations/org2.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org2MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org2MSP.peer')"
            # Original comment
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('Org1MSP.admin')"

        AnchorPeers:
            - Host: peer0.org2.example.com
              Port: 9051
    
    # - &Org3
    #     Name: Org3MSP
    #     ID: Org3MSP
    #     MSPDir: crypto-config/peerOrganizations/org3.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org3MSP.admin', 'Org3MSP.peer', 'Org3MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org3MSP.admin', 'Org3MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org3MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org3MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org1MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org3.example.com
    #           Port: 11051


    # - &Org4
    #     Name: Org4MSP
    #     ID: Org4MSP
    #     MSPDir: crypto-config/peerOrganizations/org4.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org4MSP.admin', 'Org4MSP.peer', 'Org4MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org4MSP.admin', 'Org4MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org4MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org4MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org4MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org4.example.com
    #           Port: 13051

    # - &Org5
    #     Name: Org5MSP
    #     ID: Org5MSP
    #     MSPDir: crypto-config/peerOrganizations/org5.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org5MSP.admin', 'Org5MSP.peer', 'Org5MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org5MSP.admin', 'Org5MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org5MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org5MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org1MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org5.example.com
    #           Port: 15051


    # - &Org6
    #     Name: Org6MSP
    #     ID: Org6MSP
    #     MSPDir: crypto-config/peerOrganizations/org6.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org6MSP.admin', 'Org6MSP.peer', 'Org6MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org6MSP.admin', 'Org6MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org6MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org6MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org6MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org6.example.com
    #           Port: 17051

    # - &Org7
    #     Name: Org7MSP
    #     ID: Org7MSP
    #     MSPDir: crypto-config/peerOrganizations/org7.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org7MSP.admin', 'Org7MSP.peer', 'Org7MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org7MSP.admin', 'Org7MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org7MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org7MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org1MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org7.example.com
    #           Port: 19051

    # - &Org8
    #     Name: Org8MSP
    #     ID: Org8MSP
    #     MSPDir: crypto-config/peerOrganizations/org8.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org8MSP.admin', 'Org8MSP.peer', 'Org8MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org8MSP.admin', 'Org8MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org8MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org8MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org1MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org8.example.com
    #           Port: 21051

    # - &Org9
    #     Name: Org9MSP
    #     ID: Org9MSP
    #     MSPDir: crypto-config/peerOrganizations/org9.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org9MSP.admin', 'Org9MSP.peer', 'Org9MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org9MSP.admin', 'Org9MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org9MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org9MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org1MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org9.example.com
    #           Port: 23051

    # - &Org10
    #     Name: Org10MSP
    #     ID: Org10MSP
    #     MSPDir: crypto-config/peerOrganizations/org10.example.com/msp
    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org10MSP.admin', 'Org10MSP.peer', 'Org10MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org10MSP.admin', 'Org10MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org10MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org10MSP.peer')"
    #         # CustomPolicy:
    #         #     Type: Signature
    #         #     Rule: "OR('Org1MSP.admin')"

    #     AnchorPeers:
    #         - Host: peer0.org10.example.com
    #           Port: 25051




Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true
    Orderer: &OrdererCapabilities
        V2_0: true
    Application: &ApplicationCapabilities
        V2_0: true

Application: &ApplicationDefaults
    ACLs: &ACLsDefault
        # This section provides defaults for policies for various resources
        # in the system. These "resources" could be functions on system chaincodes
        # (e.g., "GetBlockByNumber" on the "qscc" system chaincode) or other resources
        # (e.g.,who can receive Block events). This section does NOT specify the resource's
        # definition or API, but just the ACL policy for it.
        #
        # User's can override these defaults with their own policy mapping by defining the
        # mapping under ACLs in their channel definition

        #---New Lifecycle System Chaincode (_lifecycle) function to policy mapping for access control--#

        # ACL policy for _lifecycle's "CommitChaincodeDefinition" function
        _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers

        # ACL policy for _lifecycle's "QueryChaincodeDefinition" function
        _lifecycle/QueryChaincodeDefinition: /Channel/Application/Readers

        # ACL policy for _lifecycle's "QueryNamespaceDefinitions" function
        _lifecycle/QueryNamespaceDefinitions: /Channel/Application/Readers

        #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

        # ACL policy for lscc's "getid" function
        lscc/ChaincodeExists: /Channel/Application/Readers

        # ACL policy for lscc's "getdepspec" function
        lscc/GetDeploymentSpec: /Channel/Application/Readers

        # ACL policy for lscc's "getccdata" function
        lscc/GetChaincodeData: /Channel/Application/Readers

        # ACL Policy for lscc's "getchaincodes" function
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        #---Query System Chaincode (qscc) function to policy mapping for access control---#

        # ACL policy for qscc's "GetChainInfo" function
        qscc/GetChainInfo: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByNumber" function
        qscc/GetBlockByNumber: /Channel/Application/Readers

        # ACL policy for qscc's  "GetBlockByHash" function
        qscc/GetBlockByHash: /Channel/Application/Readers

        # ACL policy for qscc's "GetTransactionByID" function
        qscc/GetTransactionByID: /Channel/Application/Readers
        # qscc/GetTransactionByID: /Channel/Application/CustomPolicy

        # ACL policy for qscc's "GetBlockByTxID" function
        qscc/GetBlockByTxID: /Channel/Application/Readers

        #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

        # ACL policy for cscc's "GetConfigBlock" function
        cscc/GetConfigBlock: /Channel/Application/Readers

        # ACL policy for cscc's "GetConfigTree" function
        cscc/GetConfigTree: /Channel/Application/Readers

        # ACL policy for cscc's "SimulateConfigTreeUpdate" function
        cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

        #---Miscellanesous peer function to policy mapping for access control---#

        # ACL policy for invoking chaincodes on peer
        peer/Propose: /Channel/Application/Writers
        # peer/Propose: /Channel/Application/Restrict

        # ACL policy for chaincode to chaincode invocation
        peer/ChaincodeToChaincode: /Channel/Application/Readers

        #---Events resource to policy mapping for access control###---#

        # ACL policy for sending block events
        event/Block: /Channel/Application/Readers

        # ACL policy for sending filtered block events
        event/FilteredBlock: /Channel/Application/Readers


    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        # Restrict:
        #     Type: ImplicitMeta
        #     Rule: "ANY CustomPolicy"

    Capabilities:
        <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

    OrdererType: etcdraft

    EtcdRaft:
        Consenters:
        - Host: orderer.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt

    Addresses:
        - orderer.example.com:7050

    BatchTimeout: 2s

    BatchSize:
        # 1) 10, 2) 50, 3) 100, 4) 200, 5) 400
        MaxMessageCount: 10
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB

    Organizations:

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ChannelCapabilities


Profiles:
    Channel12:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1
                - *Org2
            Capabilities:
                <<: *ApplicationCapabilities
    # Channel13:
    #     Consortium: SampleConsortium
    #     <<: *ChannelDefaults
    #     Application:
    #         <<: *ApplicationDefaults
    #         Organizations:
    #             - *Org1
    #             - *Org3
    #         Capabilities:
    #             <<: *ApplicationCapabilities
    # Channel14:
    #     Consortium: SampleConsortium
    #     <<: *ChannelDefaults
    #     Application:
    #         <<: *ApplicationDefaults
    #         Organizations:
    #             - *Org1
    #             - *Org4
    #         Capabilities:
    #             <<: *ApplicationCapabilities

    # Channel15:
    #     Consortium: SampleConsortium
    #     <<: *ChannelDefaults
    #     Application:
    #         <<: *ApplicationDefaults
    #         Organizations:
    #             - *Org1
    #             - *Org5
    #         Capabilities:
    #             <<: *ApplicationCapabilities

    OrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: orderer.example.com
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
                - Host: orderer2.example.com
                  Port: 8050
                  ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
                - Host: orderer3.example.com
                  Port: 9050
                  ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
                # - Host: orderer4.example.com
                #   Port: 10050
                #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
                #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
                # - Host: orderer5.example.com
                #   Port: 11050
                #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
                #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
                # - Host: orderer6.example.com
                #   Port: 12050
                #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer6.example.com/tls/server.crt
                #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer6.example.com/tls/server.crt
                # - Host: orderer7.example.com
                #   Port: 13050
                #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer7.example.com/tls/server.crt
                #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer7.example.com/tls/server.crt
                # - Host: orderer8.example.com
                #   Port: 14050
                #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer8.example.com/tls/server.crt
                #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer8.example.com/tls/server.crt
                # - Host: orderer9.example.com
                #   Port: 15050
                #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer9.example.com/tls/server.crt
                #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer9.example.com/tls/server.crt
            Addresses:
                - orderer.example.com:7050
                - orderer2.example.com:8050
                - orderer3.example.com:9050
                # - orderer4.example.com:10050
                # - orderer5.example.com:11050
                # - orderer6.example.com:12050
                # - orderer7.example.com:13050
                # - orderer8.example.com:14050
                # - orderer9.example.com:15050

            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                - *Org1
                - *Org2


